name: CI

on:
  push:
    branches: ['**']
  pull_request:
    branches: ['**']

permissions:
  contents: read

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      should-skip: ${{ steps.skip-check.outputs.should_skip }}
      is-docs-only: ${{ steps.changes.outputs.docs-only }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Check for documentation-only changes
        id: changes
        run: |
          if git diff --name-only HEAD~1 HEAD | grep -E -v '\.(md|txt)$' | grep -q .; then
            echo "docs-only=false" >> $GITHUB_OUTPUT
          else
            echo "docs-only=true" >> $GITHUB_OUTPUT
          fi

      - name: Skip check
        id: skip-check
        uses: fkirc/skip-duplicate-actions@v5
        with:
          concurrent_skipping: 'same_content_newer'
          skip_after_successful_duplicate: 'true'

  commitlint:
    runs-on: ubuntu-latest
    needs: setup
    if: needs.setup.outputs.should-skip != 'true'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Check Conventional Commits
        uses: wagoid/commitlint-github-action@v6
        with:
          configFile: commitlint.config.mjs
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


  lint:
    runs-on: ubuntu-latest
    needs: setup
    if: needs.setup.outputs.should-skip != 'true' && needs.setup.outputs.is-docs-only != 'true'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Use Node.js
        uses: actions/setup-node@v5
        with:
          node-version: 20.x
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint

  test:
    runs-on: ubuntu-latest
    needs: setup
    if: needs.setup.outputs.should-skip != 'true' && needs.setup.outputs.is-docs-only != 'true'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Use Node.js
        uses: actions/setup-node@v5
        with:
          node-version: 20.x
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests (Jest)
        run: npm run test:ci
        env:
          CI: true

  build:
    runs-on: ubuntu-latest
    needs: setup
    if: needs.setup.outputs.should-skip != 'true' && needs.setup.outputs.is-docs-only != 'true'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Use Node.js
        uses: actions/setup-node@v5
        with:
          node-version: 20.x
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Cache Angular build
        uses: actions/cache@v4
        with:
          path: |
            .angular/cache
            dist
          key: ${{ runner.os }}-angular-build-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-angular-build-

      - name: Build (production)
        run: npm run build -- --configuration=production

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: dist
          retention-days: 1
